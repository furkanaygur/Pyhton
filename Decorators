# ***************************************
def decorator(func):
    def wrapper(name):
        print("Start")
        func(name)
        print("End")

    return wrapper


@decorator
def sayHello(name):
    print("Hello", name)


# sayHello = decorator(sayHello) // if dont exist '@decorator' you have to use this
sayHello("furkan")
# *****************************************

import math
import time


def calculate_time(func):
    def wrapper(*args, **kwargs):
        start = time.time()
        time.sleep(1)
        func(*args, **kwargs)
        finish = time.time()
        print(func.__name__ + "Time = " + str(finish - start))

    return wrapper


@calculate_time
def baseTaking(a, b):
    print(math.pow(a, b))


@calculate_time
def factorial(num):
    print(math.factorial(num))


def pluss(a, b):
    print(a + b)


print("Result =")
baseTaking(2, 3)
factorial(4)
pluss(2, 3)
# *************************************************
